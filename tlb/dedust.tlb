create_vault#21cfe02b query_id:uint64 asset:Asset = InMsgBody;
create_volatile_pool#97d51f2f query_id:uint64 asset0:Asset asset1:Asset = InMsgBody;
native$0000 = Asset;
jetton$0001 workchain_id:int8 address:uint256 = Asset;
extra_currency$0010 currency_id:int32 = Asset;
timestamp#_ _:uint32 = Timestamp;
given_in$0 = SwapKind;
given_out$1 = SwapKind; // Not implemented.
swap_params#_ deadline:Timestamp recipient_addr:MsgAddressInt referral_addr:MsgAddress
              fulfill_payload:(Maybe ^Cell) reject_payload:(Maybe ^Cell) = SwapParams;
step#_ pool_addr:MsgAddressInt params:SwapStepParams = SwapStep;
step_params#_ kind:SwapKind limit:Coins next:(Maybe ^SwapStep) = SwapStepParams;
volatile$0 = PoolType;
stable$1 = PoolType;
pool_params#_ pool_type:PoolType asset0:Asset asset1:Asset = PoolParams;
swap#ea06185d query_id:uint64 amount:Coins _:SwapStep swap_params:^SwapParams = InMsgBody;
swap#e3a0d482 _:SwapStep swap_params:^SwapParams = ForwardPayload;
swap#9c610de3 asset_in:Asset asset_out:Asset amount_in:Coins amount_out:Coins
              ^[ sender_addr:MsgAddressInt referral_addr:MsgAddress
              reserve0:Coins reserve1:Coins ] = ExtOutMsgBody;
